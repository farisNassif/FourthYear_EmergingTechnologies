/* This file is referenced in the HTML files and called in order for the canvas to be drawn on and display
   Adapted from https://www.jitsejan.com/python-and-javascript-in-flask.html */

$( document ).ready(function() {
  /* Main drawing function, this is ran initially */
  function init(container, width, height, fillColor) {
    var canvas = createCanvas(container, width, height);
    var ctx = canvas.getContext('2d');
    /* Draw Circle, called when mouse is moving */
    ctx.fillCircle = function(x, y, radius, fillColor) {
      this.fillStyle = fillColor;
      this.beginPath();
      this.moveTo(x, y);
      this.arc(x, y, radius, 0, Math.PI * 2, false);
      this.fill();
    };
    
    /* While the mouse is pressed down and moving, draw, otherwise return */
    canvas.onmousemove = function(e) {
      if (!canvas.isDrawing) {
        return;
      }
      /* Co-ordinate values for drawing */
      var x = e.pageX - this.offsetLeft;
      var y = e.pageY - this.offsetTop;
      /* Size of output generated by drawing */
      var radius = 5;
      /* Make it black */
      var fillColor = 'rgb(0,0,0)';
      ctx.fillCircle(x, y, radius, fillColor);
    };
    /* The two methods below are controllers, knowing when to draw and when to stop */
    canvas.onmousedown = function(e) {
      canvas.isDrawing = true;
    };
    canvas.onmouseup = function(e) {
      canvas.isDrawing = false;
    };
  } 
  
  /* Initializing the canvas so it may be passed to the initialization function */
  var container = document.getElementById('canvas');
  init(container, 28, 28  , '#ddd');

  /* Canvas creation method, creates canvas object */
  function createCanvas(parent, width, height) {
    /* Ref to canvasBorder within styles.css */
    var canvas = document.getElementById("canvas");
    canvas.context = canvas.getContext('2d');
    
    return canvas;
  }

  /* Clear the canvas, given the paramaters of the drawable area */
  function clearCanvas() {
    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
        ctx.clearRect(0, 0, canvas.width, canvas.height);
  }

  /* Invoked when the drawing is published, sends the image data to the backend*/
  function publishCanvas() {
    /* Get the canvas */
    var canvas = document.getElementById("canvas");
    var dataURL=canvas.toDataURL();
  
    $.ajax({
        type:"POST",
        url:"/upload",
        data:{
            imageBase64:dataURL
            }
        }).done(function(o){
            document.getElementById('mytext').value = o;
            console.log(o);
        });
  }
  /* Binding for the ClearButton in index.html */
  $( "#clearButton" ).click(function(){
    clearCanvas();
  });

  /* Binding for the PublishButton in index.html */
  $( "#publishButton" ).click(function(){
    publishCanvas();
  });
});